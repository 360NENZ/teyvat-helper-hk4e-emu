name: Build

on:
  push:
    branches: [main]

jobs:
  build-darwin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin]
        goarch: [amd64, arm64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true
      - name: Build
        run: |
          go build -trimpath -ldflags "-s -w" -o hk4e-emu cmd/server/main.go
          cp config.example.yaml config.yaml
          zip -r hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip hk4e-emu config.yaml data LICENSE README.md
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [386, amd64, arm, arm64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true
      - name: Build
        run: |
          go build -trimpath -ldflags "-s -w" -o hk4e-emu cmd/server/main.go
          cp config.example.yaml config.yaml
          zip -r hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip hk4e-emu config.yaml data LICENSE README.md
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  build-windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows]
        goarch: [386, amd64, arm, arm64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true
      - name: Build
        run: |
          go build -trimpath -ldflags "-s -w" -o hk4e-emu.exe cmd/server/main.go
          cp config.example.yaml config.yaml
          zip -r hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip hk4e-emu.exe config.yaml data LICENSE README.md
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: hke4-emu_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          
